#!/bin/sh
if [ -f /etc/default/backuppc-helper ]
then
	. /etc/default/backuppc-helper
	if [ -z "$VOL" ]
	then
		echo "#### WARNING ####"
		echo "VOL in /etc/default/backuppc-helper not set!"
		echo "#################"
		exit 0
	fi
else
	echo "#### WARNING ####"
	echo "/etc/default/backuppc-helper is missing!"
	echo "#################"
	exit 0
fi
MOUNTPOINT="/mnt"
MOUNT="$(which mount)"
FSTAB="/etc/fstab"
PROCMOUNTS="/proc/mounts"
TMPDIR="/tmp/backuppc-helper"
SLEEP="2"
DISKTYPE=${2}
if [ -z "${DISKTYPE}" ]; then
	DISKTYPE=xen
fi
case "${DISKTYPE}" in
	xen)
		BACKUPDEV="/dev/${VOL}/${1}-disk"
		;;
	kvm)
		BACKUPDEV="/dev/${VOL}/${1}-kvm"
		;;
	native)
		BACKUPDEV="/dev/${VOL}/${1}"
		;;
        *)
                echo "unknow disc format!"
		exit 0
                ;;
esac

check_fs() {
	if [ `fsck -N $1 | grep fsck.xfs | wc -l` -gt "0" ] ; then
		echo "-o nouuid"
	fi
}

pre_backup () {
	if  [ `ps ax| grep ${1} | grep rsync | wc -l` -eq "0" ] ; then
		if [ `mount | grep ${1}--snap | wc -l` -gt "0" ] ; then
			lvm_post_backup ${1}
		fi
		if [ -z "$VSIZE" ]
		then
			VSIZE="1G"
		fi
		case ${DISKTYPE} in
			kvm)
				if ! [ -d ${TMPDIR} ] ; then mkdir -p ${TMPDIR} ; fi
				mkdir -p ${MOUNTPOINT}/${1}
				lvcreate -L$VSIZE -s -n ${1}-snap ${BACKUPDEV} >/dev/null 2>&1
				[ $(lsmod | grep dm_mod | wc -l) -gt 0 ] || modprobe dm_mod
				LOOPDEV=$(losetup -f)
				[ -z ${LOOPDEV} ] && LOOPDEV="/dev/loop0"
				losetup ${LOOPDEV} /dev/${VOL}/${1}-snap
				echo "${LOOPDEV}" > ${TMPDIR}/${1}.loop
				kpartx -a ${LOOPDEV}
				# let mapper settle device
				sleep ${SLEEP}
				LODEV=$(basename ${LOOPDEV})
				FS=$(check_fs "/dev/mapper/${LODEV}p1")
				MOUNT="${MOUNT} ${FS}"
				${MOUNT} /dev/mapper/${LODEV}p1 ${MOUNTPOINT}/${1}
				;;
			native)
				# check if $1 is set to 'root'
				[ "${1}" != "root" ] && exit 1
				VOLSTRING=$(echo ${VOL} | sed "s/-/--/g")
				mkdir -p ${MOUNTPOINT}/${1}
				lvcreate -L$VSIZE -s -n ${1}-snap ${BACKUPDEV} >/dev/null 2>&1
				FS=$(check_fs /dev/${VOL}/${1}-snap)
				MOUNT="${MOUNT} ${FS}"
				${MOUNT} /dev/${VOL}/${1}-snap ${MOUNTPOINT}/${1}
				# get all needed lv and mounts
				LVDEVS=$(grep ${VOLSTRING} ${MOUNTPOINT}/${1}/${FSTAB} | grep -vE "${VOLSTRING}-(root|swap|tmp)" | awk {'print $1'})
				# iterate over the lv and mounts
				for DEV in ${LVDEVS}; do
					ADDMOUNTPOINT=$(grep ${DEV} ${MOUNTPOINT}/${1}/${FSTAB} | awk {'print $2'})
					lvcreate -L$VSIZE -s -n ${ADDMOUNTPOINT}-snap ${DEV} >/dev/null 2>&1
					mount /dev/${VOL}/${ADDMOUNTPOINT}-snap ${MOUNTPOINT}/${1}/${ADDMOUNTPOINT}
				done
				;;
			*)
				mkdir -p ${MOUNTPOINT}/${1}
				lvcreate -L$VSIZE -s -n ${1}-snap ${BACKUPDEV} >/dev/null 2>&1
				FS=$(check_fs /dev/${VOL}/${1}-snap )
				MOUNT="${MOUNT} ${FS}"
				${MOUNT} /dev/${VOL}/${1}-snap ${MOUNTPOINT}/${1}
				;;
		esac
	else
		exit 1
	fi
}

post_backup () {
	if [ `ps ax| grep ${1} | grep rsync | wc -l` -eq "0" ] ; then
		umount ${MOUNTPOINT}/${1}
		case ${DISKTYPE} in
			kvm)
				DEVSTRING=$(echo $1 | sed "s/-/--/g")
				LOOPDEV=$(losetup -a | grep ${DEVSTRING} | awk -F':' {'print $1'})
				[ -z ${LOOPDEV} ] && [ -f ${TMPDIR}/${1}.loop ] && LOOPDEV=$(grep loop ${TMPDIR}/${1}.loop | tail -1)
				[ -z ${LOOPDEV} ] && echo "ERROR: Loopdevice could not be detected!" && exit 1
				kpartx -d ${LOOPDEV} && losetup -d ${LOOPDEV}
				rm -f ${TMPDIR}/${1}.loop
				;;
			native)
				[ "${1}" != "root" ] && exit 1
				VOLSTRING=$(echo ${VOL} | sed "s/-/--/g") 
				while [ $(grep ${VOLSTRING} ${PROCMOUNTS} | grep "\--snap" | grep -v "${MOUNTPOINT}/root " | head -1 | awk {'print $2'} | wc -l) -eq "1" ]; do
					RMMOUNTPOINT=$(grep ${VOLSTRING} ${PROCMOUNTS} | grep "\--snap" | grep -v "${MOUNTPOINT}/root " | head -1 | awk {'print $2'})
					DEV=$(grep ${RMMOUNTPOINT} ${PROCMOUNTS} | awk {'print $1'})
					umount ${RMMOUNTPOINT}
					lvremove -f ${DEV} >/dev/null 2>&1
				done
				if [ $(grep ${VOLSTRING} ${PROCMOUNTS} | grep "\--snap" | grep "${MOUNTPOINT}/root " | head -1 | awk {'print $2'} | wc -l) -eq "1" ]; then
					RMMOUNTPOINT=$(grep ${VOLSTRING} ${PROCMOUNTS} | grep "\--snap" | grep "${MOUNTPOINT}/root " | head -1 | awk {'print $2'})
					DEV=$(grep ${RMMOUNTPOINT} ${PROCMOUNTS} | awk {'print $1'})
					umount ${RMMOUNTPOINT}
					lvremove -f ${DEV} >/dev/null 2>&1
				fi
				;;
			*)
				;;
		esac
		lvremove -f /dev/${VOL}/${1}-snap >/dev/null 2>&1
		if [ ${1} ]; then
			rmdir ${MOUNTPOINT}/${1}
		fi
	fi
}

COMMAND=$(basename ${0})
case "${COMMAND}" in
        lvm_pre_backup)
                pre_backup ${1}
                ;;
        lvm_post_backup)
                post_backup ${1}
                ;;
        *)
                echo "unknow command name!"
		exit 0
                ;;
esac
